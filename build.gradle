buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea' 
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'aggregator-demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

project.ext {
	springVersion = '4.1.4.RELEASE'
	springBatchVersion = '3.0.3.RELEASE'
	appName = 'aggregator.example.first'
	springIntegrationVersion = '4.1.1.RELEASE'
}

dependencies {	
	compile("org.springframework.boot:spring-boot-starter-integration:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-logging:${springBootVersion}")

	compile("org.springframework.integration:spring-integration-xml:${springIntegrationVersion}")
	compile("org.springframework.integration:spring-integration-jmx:${springIntegrationVersion}")
	compile("org.springframework.integration:spring-integration-groovy")

	compile("joda-time:joda-time:2.7")
	compile("com.google.guava:guava:18.0")
	compile("org.apache.commons:commons-lang3:3.3.2")

	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	testCompile("org.springframework.integration:spring-integration-test:${springIntegrationVersion}")

}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
